name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on:
  push:
    branches:
      - main
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials (initial)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Assume Role
        id: assume
        env:
          ROLE_ARN: ${{ secrets.ROLE_ARN }}
        run: |
          CREDS=$(aws sts assume-role \
            --role-arn ${ROLE_ARN} \
            --role-session-name github-action-session)

          echo "ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "SECRET_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Configure AWS credentials (assumed role)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.ACCESS_KEY }}
          aws-secret-access-key: ${{ env.SECRET_KEY }}
          aws-session-token: ${{ env.SESSION_TOKEN }}
          aws-region: ap-northeast-2
      - name: Get Endpoint of frontend
        run: |
          # echo "ENDPOINT_URL=$(aws ssm get-parameter --name /coupang-parcels/cloudfront-url --output text --query 'Parameter.Value')" >> $GITHUB_ENV
          echo "ENDPOINT_URL=asdfasfd" >> $GITHUB_ENV

      - name: Change index.html endpoint
        run: |
          echo $ENDPOINT_URL
          sed -i "s/##ENDPOINT_URL##/$ENDPOINT_URL/g" index.html

      - name: Deploy or Upload
        env:
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: |
          aws s3api put-object --bucket ${BUCKET_NAME} --key index.html
